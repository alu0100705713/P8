require 'matrix.rb'
require 'fraccion.rb'

  describe Matriz do
	before :each do
	    @p1 = Matriz.new(2,2)  
	    @p2 = Matriz.new(2,2)
	    @p5 = Matriz.new(2,2)
	    #@elem = @p1[2][2]
	    
	    @p1[0][0]=FCreaciónew(1,2)
	    @p1[0][1]=Fraccion.new(1,3)
	    @p1[1][0]=Fraccion.new(1,4)
	    @p1[1][1]=Fraccion.new(1,5)
	    @p2[0][0]=Fraccion.new(1,2)
	    @p2[0][1]=Fraccion.new(2,3)
	    @p2[1][0]=Fraccion.new(3,4)
	    @p2[1][1]=Fraccion.new(4,5)
	      
	    @p3 = @p1 + @p2
	    @p4 = @p1 - @p2
	    @p5 = @p1 * @p2
	    


	end

      describe "Creación" do
	
	  it "Comprobación de creación de matrices" do
	    @p1.is_a? Array
	    @p2.is_a? Array
	    @p3.is_a? Array
	    @p4.is_a? Array
	  end
	  
	  it "Comprobación existencia filas y columnas" do
	    @p1.filas.should_not be_nil 
	    @p1.columnas.should_not be_nil 
	    @p2.filas.should_not be_nil 
	    @p2.columnas.should_not be_nil 
	  end
	  
	  it "Comprobación de creación y acceso a las variables" do 
	    @p1[0][0].should_not be_nil
	    @p1[0][1].should_not be_nil
	    @p1[1][0].is_a? Integer
	    @p1[1][1].is_a? Integer
	    #@p1[2][2].should eq(@elem)
	  end
	  
      end

      describe "Operaciones" do	

	 it "La suma da el resultado correcto" do
	  (@p1 + @p2) == (@p3) 
	  @p3[1][1].should ==("1/1")
	 end
	
	 it "La resta da el resultado correcto" do
	  (@p1-@p2) == (@p4)  
	  @p4[0][0].should ==("0/1")
	end
	
	it "La multiplicación el resultado correcto" do
	  (@p1*@p2) == (@p5)
	end 
	
      end
  end

	  
